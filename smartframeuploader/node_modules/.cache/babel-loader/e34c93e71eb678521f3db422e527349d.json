{"ast":null,"code":"var _jsxFileName = \"E:\\\\Development\\\\Projects\\\\Smart Frame\\\\SmartFrame_ReactUploader\\\\smartframeuploader\\\\src\\\\Images\\\\Images.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, SimpleGrid, Image } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { useQuery } from \"react-query\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Images() {\n  _s();\n\n  try {\n    const data = useQuery('posts', fetchPosts);\n  } catch (error) {// Error handling\n  }\n\n  const {\n    isLoading,\n    error,\n    data\n  } = useQuery(\"getImages\", () => fetch(\"http://localhost:3002/images\").then(res => {\n    console.log(\"res\");\n    console.log(res.json());\n    return res.json();\n  }));\n  console.log(\"here\");\n  if (isLoading) return /*#__PURE__*/_jsxDEV(Box, {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 25\n  }, this);\n  console.log(\"data\", data);\n  return /*#__PURE__*/_jsxDEV(SimpleGrid, {\n    minChildWidth: \"200px\",\n    spacing: \"40px\",\n    mt: \"20\",\n    children: [/*#__PURE__*/_jsxDEV(Image, {\n      src: `'${data[0].signedUrl[0]}'`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      bg: \"#9CA3DB\",\n      height: \"200px\",\n      width: \"200px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      bg: \"#9CA3DB\",\n      height: \"200px\",\n      width: \"200px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      bg: \"#9CA3DB\",\n      height: \"200px\",\n      width: \"200px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      bg: \"#9CA3DB\",\n      height: \"200px\",\n      width: \"200px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      bg: \"#9CA3DB\",\n      height: \"200px\",\n      width: \"200px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Images, \"/8JD0oHV9X/WZUw8vxPFlgVmXj0=\", false, function () {\n  return [useQuery, useQuery];\n});\n\n_c = Images;\n\nvar _c;\n\n$RefreshReg$(_c, \"Images\");","map":{"version":3,"sources":["E:/Development/Projects/Smart Frame/SmartFrame_ReactUploader/smartframeuploader/src/Images/Images.tsx"],"names":["Box","SimpleGrid","Image","React","useQuery","Images","data","fetchPosts","error","isLoading","fetch","then","res","console","log","json","signedUrl"],"mappings":";;;AAAA,SAASA,GAAT,EAAcC,UAAd,EAA0BC,KAA1B,QAAuC,kBAAvC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAqC,aAArC;;AAEA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAC7B,MAAI;AACA,UAAMC,IAAI,GAAGF,QAAQ,CAAC,OAAD,EAAUG,UAAV,CAArB;AACD,GAFH,CAEI,OAAOC,KAAP,EAAc,CACd;AACD;;AAEL,QAAM;AAAEC,IAAAA,SAAF;AAAaD,IAAAA,KAAb;AAAoBF,IAAAA;AAApB,MAA6BF,QAAQ,CAAC,WAAD,EAAc,MACvDM,KAAK,CAAC,8BAAD,CAAL,CAAsCC,IAAtC,CAA4CC,GAAD,IAAS;AAClDC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAJ,EAAZ;AACA,WAAOH,GAAG,CAACG,IAAJ,EAAP;AACD,GAJD,CADyC,CAA3C;AAOAF,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,MAAIL,SAAJ,EAAe,oBAAO,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACfI,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBR,IAApB;AACA,sBACE,QAAC,UAAD;AAAY,IAAA,aAAa,EAAC,OAA1B;AAAkC,IAAA,OAAO,EAAC,MAA1C;AAAiD,IAAA,EAAE,EAAC,IAApD;AAAA,4BACE,QAAC,KAAD;AAAO,MAAA,GAAG,EAAG,IAAGA,IAAI,CAAC,CAAD,CAAJ,CAAQU,SAAR,CAAkB,CAAlB,CAAqB;AAArC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,GAAD;AAAK,MAAA,EAAE,EAAC,SAAR;AAAkB,MAAA,MAAM,EAAC,OAAzB;AAAiC,MAAA,KAAK,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,GAAD;AAAK,MAAA,EAAE,EAAC,SAAR;AAAkB,MAAA,MAAM,EAAC,OAAzB;AAAiC,MAAA,KAAK,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,GAAD;AAAK,MAAA,EAAE,EAAC,SAAR;AAAkB,MAAA,MAAM,EAAC,OAAzB;AAAiC,MAAA,KAAK,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,GAAD;AAAK,MAAA,EAAE,EAAC,SAAR;AAAkB,MAAA,MAAM,EAAC,OAAzB;AAAiC,MAAA,KAAK,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,YALF,eAME,QAAC,GAAD;AAAK,MAAA,EAAE,EAAC,SAAR;AAAkB,MAAA,MAAM,EAAC,OAAzB;AAAiC,MAAA,KAAK,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GA3BuBX,M;UAEHD,Q,EAKgBA,Q;;;KAPbC,M","sourcesContent":["import { Box, SimpleGrid, Image } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport { useQuery, QueryCache } from \"react-query\";\r\n\r\nexport default function Images() {\r\n    try {\r\n        const data = useQuery('posts', fetchPosts)\r\n      } catch (error) {\r\n        // Error handling\r\n      }\r\n\r\n  const { isLoading, error, data } = useQuery(\"getImages\", () =>\r\n    fetch(\"http://localhost:3002/images\").then((res) => {\r\n      console.log(\"res\");\r\n      console.log(res.json());\r\n      return res.json();\r\n    })\r\n  );\r\n  console.log(\"here\");\r\n  if (isLoading) return <Box>Loading...</Box>;\r\n  console.log(\"data\", data);\r\n  return (\r\n    <SimpleGrid minChildWidth=\"200px\" spacing=\"40px\" mt=\"20\">\r\n      <Image src={`'${data[0].signedUrl[0]}'`}></Image>\r\n      <Box bg=\"#9CA3DB\" height=\"200px\" width=\"200px\"></Box>\r\n      <Box bg=\"#9CA3DB\" height=\"200px\" width=\"200px\"></Box>\r\n      <Box bg=\"#9CA3DB\" height=\"200px\" width=\"200px\"></Box>\r\n      <Box bg=\"#9CA3DB\" height=\"200px\" width=\"200px\"></Box>\r\n      <Box bg=\"#9CA3DB\" height=\"200px\" width=\"200px\"></Box>\r\n    </SimpleGrid>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}